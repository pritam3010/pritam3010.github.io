{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","type","value","onChange","setState","target","React","Component","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpan","height","imageRef","current","clientHeight","span","Math","ceil","createRef","addEventListener","_this$props$image","image","description","urls","style","gridRowEnd","concat","ref","alt","src","regular","ImageList","images","map","components_ImageCard","key","id","App","onSearchSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","stop","marginTop","components_SearchBar","src_components_ImageList","ReactDOM","render","components_App","document","getElementById"],"mappings":"iQAEeA,WAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cACE,gFCqCSC,6MAzBbC,MAAQ,CAAEC,KAAM,MAEhBC,aAAe,SAAAC,GACbA,EAAMC,iBACNC,EAAKC,MAAMC,SAASF,EAAKL,MAAMC,+EAGxB,IAAAO,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAML,SAAUE,KAAKP,aAAcW,UAAU,WAC3CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLC,MAAON,KAAKT,MAAMC,KAClBe,SAAU,SAAAb,GAAK,OAAIK,EAAKS,SAAS,CAAEhB,KAAME,EAAMe,OAAOH,qBA7B5CI,IAAMC,WCwBfC,qBA1Bb,SAAAA,EAAYf,GAAO,IAAAD,EAAA,OAAAiB,OAAAC,EAAA,EAAAD,CAAAb,KAAAY,IACjBhB,EAAAiB,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAjB,KAAMH,KASRqB,QAAU,WACR,IAAMC,EAASvB,EAAKwB,SAASC,QAAQC,aAC/BC,EAAOC,KAAKC,KAAKN,EAAS,IAChCvB,EAAKY,SAAS,CAAEe,UAXhB3B,EAAKL,MAAQ,CAAEgC,KAAM,GACrB3B,EAAKwB,SAAWV,IAAMgB,YAHL9B,mFAOjBI,KAAKoB,SAASC,QAAQM,iBAAiB,OAAQ3B,KAAKkB,0CAS7C,IAAAU,EACuB5B,KAAKH,MAAMgC,MAAjCC,EADDF,EACCE,YAAaC,EADdH,EACcG,KACrB,OACE9B,EAAAC,EAAAC,cAAA,OAAK6B,MAAO,CAAEC,WAAU,QAAAC,OAAUlC,KAAKT,MAAMgC,QAC3CtB,EAAAC,EAAAC,cAAA,OAAKgC,IAAKnC,KAAKoB,SAAUgB,IAAKN,EAAaO,IAAKN,EAAKO,kBArBrC5B,IAAMC,YCSf4B,EAPG,SAAA1C,GAChB,IAAM2C,EAAS3C,EAAM2C,OAAOC,IAAI,SAAAZ,GAC9B,OAAO5B,EAAAC,EAAAC,cAACuC,EAAD,CAAWC,IAAKd,EAAMe,GAAIf,MAAOA,MAE1C,OAAO5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcoC,ICcvBK,6MAjBbtD,MAAQ,CAAEiD,OAAQ,MAClBM,qDAAiB,SAAAC,EAAMvD,GAAN,IAAAwD,EAAA,OAAAC,EAAA/C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAOjE,KAFJ,OACTwD,EADSG,EAAAO,KAIf9D,EAAKY,SAAS,CAAEgC,OAAQQ,EAASW,KAAKC,UAJvB,wBAAAT,EAAAU,SAAAd,oIAOf,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe4B,MAAO,CAAE8B,UAAW,SAChD7D,EAAAC,EAAAC,cAAC4D,EAAD,CAAWjE,SAAUE,KAAK8C,iBAC1B7C,EAAAC,EAAAC,cAAC6D,EAAD,CAAWxB,OAAQxC,KAAKT,MAAMiD,iBAZpB9B,IAAMC,WCAxBsD,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e83e7934.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.unsplash.com\",\r\n  headers: {\r\n    Authorization:\r\n      \"Client-ID 2e368b4523c1eacc735cae64ff138c95fecb4017fb2db52bbb73b1964e0bf08d\"\r\n  }\r\n});\r\n","import React from \"react\";\r\n\r\n//Access Key 2e368b4523c1eacc735cae64ff138c95fecb4017fb2db52bbb73b1964e0bf08d\r\n//Secret Key 1c4fc91cc087e04a0bd47ef8e7e698bc064008c1a16c58e0390a6e262e88d2fb\r\n\r\nclass SearchBar extends React.Component {\r\n  // constructor() {\r\n  //   super();\r\n  //   this.state = { term: \"\" };\r\n  //   this.onFormSubmit = this.onFormSubmit.bind(this);\r\n  // }\r\n  // onFormSubmit(event) {\r\n  //   event.preventDefault();\r\n  //   console.log(this.state.term);\r\n  // }\r\n  //We can also avoid the error by passong arrow funcion in props\r\n  //To avoid the error \"can not read state propery of undefined\"\r\n  //onSubmit={(event) => this.onFormSubmit(event)}..........third way to avoid error\r\n  state = { term: \"\" };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Image Search</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.term}\r\n              onChange={event => this.setState({ term: event.target.value })}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { span: 0 };\r\n    this.imageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", this.setSpan);\r\n  }\r\n\r\n  setSpan = () => {\r\n    const height = this.imageRef.current.clientHeight;\r\n    const span = Math.ceil(height / 10);\r\n    this.setState({ span });\r\n  };\r\n\r\n  render() {\r\n    const { description, urls } = this.props.image;\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.span}` }}>\r\n        <img ref={this.imageRef} alt={description} src={urls.regular} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","import \"./ImageList.css\";\r\nimport React from \"react\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nconst ImageList = props => {\r\n  const images = props.images.map(image => {\r\n    return <ImageCard key={image.id} image={image} />;\r\n  });\r\n  return <div className=\"image-list\">{images}</div>;\r\n};\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\nimport unsplash from \"../api/unsplash\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport ImageList from \"./ImageList\";\r\nclass App extends React.Component {\r\n  state = { images: [] };\r\n  onSearchSubmit = async term => {\r\n    const response = await unsplash.get(\"/search/photos\", {\r\n      params: { query: term }\r\n    });\r\n    this.setState({ images: response.data.results });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\r\n        <SearchBar onSubmit={this.onSearchSubmit} />\r\n        <ImageList images={this.state.images} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}